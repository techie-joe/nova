extends _html

block append vars
  -
    pageid      = 'basic/text'
    pageUrl     = siteUrl + '/basic/text.html'
    title       = `Text`
    description = 'Keep texts neat and tidy'
  -
    cssi.gridlines = 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="1px" height="12px"><rect width="1" height="1" fill="%23A9790688" /></svg>';

block append style
  style.
    #info ._f3 { flex-basis:30% }
  //- style.

block article
  article._article
  
    section._ma: ._960: ._flex(style="gap:2rem")#info
      ._fit(style="flex-basis: 38rem;")
        h2._sans._h4 System Font
        p._system._text_justify.
          System font is the default set of fonts used by an operating system for displaying text across the user interface. The primary goal is to provide a seamless experience for users as they interact with different applications and system elements. Common examples includes "Segoe UI" on Windows, "San Francisco" on macOS, and "Roboto" on Android. They are an integral part of the overall design language and contribute to the visual identity of the operating system.

      ._f(style="flex-basis: 220px;")
        h2._sans._h4 Sans
        p._sans._text_justify.
          Sans fonts such as Arial, are known for their clean and modern look, lacking the small decorative strokes at the ends of letters. They are widely used for digital media.

      ._f(style="flex-basis: 220px;")
        h2._serif._h4 Serif
        p._serif._text_justify.
          Serif fonts, like Times New Roman, Garamond and Georgia, feature small lines or strokes attached to the ends of letters, giving a more traditional and formal appearance. These fonts are often used in print media for their elegant look.

      ._f(style="flex-basis: 220px;")
        h2._mono._h4 Monospace
        p._mono._text_justify.
          Monospace fonts, such as Courier New, have characters that occupy the same horizontal space. This uniform spacing makes them ideal for displaying scripts and source codes.
    //- section

  hr

  section._ma: ._960

    p Use helper class to customize the visual appearance of headings and texts. They helps separate visual appearance from semantics, giving you better control over both. Use #[code._code _h1] to #[code._code _hx3] for headings, and #[code._code _t1] to #[code._code _t10] for other texts.

    - sample  = 'Text';
    - headings  = 'Heading';
    style.
      .samples > * { white-space:nowrap }
    ._flex._gap2
      ._f.samples
        p._hx3 #{headings} x3
        p._hx2 #{headings} x2
        p._hx1 #{headings} x1
        h1._h1 #{headings} 1
        h2._h2 #{headings} 2
        h3._h3 #{headings} 3
        h4._h4 #{headings} 4
        h5._h5 #{headings} 5
        h6._h6 #{headings} 6
        p._h7 #{headings} 7
        p Normal Text
      ._f.samples
        p._t10 #{sample} 10
        p._t9 #{sample} 9
        p._t8 #{sample} 8
        p._t7 #{sample} 7
        p._t6 #{sample} 6
        p._t5 #{sample} 5
        p._t4 #{sample} 4
        p._t3 #{sample} 3
        p._t2 #{sample} 2
        p._t1 #{sample} 1
        p Normal Text

  hr

  style.
    .gridlines {
      min-height: 100px;
      background-image: url('!{cssi.gridlines}');
      background-repeat: repeat;
    }

    .g{display:flex;flex-flow:row wrap;align-content:flex-start}
    .u{display:inline-block;vertical-align:top}
    .demo .u { margin: 0 2px; padding-bottom: 18px; }

    .io1  { background: #66668844; box-shadow:0 1px orange; }
    .io2  { background: #66886644; box-shadow:0 1px orange; }
  //- style.

  mixin rag(x)
    - var n = 0
    while n < x
      if(n%2==0)
        .io2 H_#[sup._sup H]#[sub._sub _]
      else
        .io1 &nbsp;
      - n++
  //- mixin

  section._960

    ._container._small._mono // Proper text sizing for maximum adaptability

    hr

    ._flex

      ._f.g.demo.gridlines(style="flex: 1 0 340px;")
        .u._t1: +rag(13)
        .u._t2: +rag(12)
        .u._t3: +rag(11)
        .u._t4: +rag(10)
        .u._t5: +rag(9)
        .u._t6: +rag(8)
        .u._t7: +rag(7)

      ._f.g.demo.gridlines(style="flex: 1 0 340px;")
        .u._t8: +rag(5)
        .u._t9: +rag(5)
        .u._t10: +rag(5)
  
  //- section