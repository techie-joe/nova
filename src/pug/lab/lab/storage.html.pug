extends _html

block append vars
  -
    pageid      = 'lab/storage'
    pageUrl     = siteUrl + '/lab/storage.html'
    title       = `Storage`
    description = 'Testing storage'

block article
  article._article
    +btns
      button._a3(onclick="localStorage.clear();") Clear Storage
      button._a3(onclick="test_addStorage();") Add to Storage
      button._a3(onclick="theme.change();") Change Theme
    hr._mb0
    section._scrollable(style="height:400px")#sec
      pre.pre#pre._container.
        // #{description} ..
        #[span#localStorage]
    hr._mt0

block prepend script
  script.
    (()=>{

      const originalSetItem = localStorage.setItem;
      const originalRemoveItem = localStorage.removeItem;
      const originalClear = localStorage.clear;

      function triggerChangeEvent(key, oldValue, newValue) {
        window.dispatchEvent(new CustomEvent('local-storage-change', {
          detail: { key, oldValue, newValue }
        }));
      }

      localStorage.setItem = function (key, value) {
        const oldValue = localStorage.getItem(key);
        originalSetItem.apply(this, arguments);
        triggerChangeEvent(key, oldValue, value);
      };

      localStorage.removeItem = function (key) {
        const oldValue = localStorage.getItem(key);
        originalRemoveItem.apply(this, arguments);
        triggerChangeEvent(key, oldValue, null);
      };

      localStorage.clear = function () {
        originalClear.apply(this);
        triggerChangeEvent('*', null, null); // use * to signal mass clear
      };

      // Also listen to cross-tab changes
      window.addEventListener('storage', (e) => {
        triggerChangeEvent(e.key, e.oldValue, e.newValue);
      });

    })();
  script.
    (()=>{
      const
        w = window,
        d = document,
        eid = (id) => d.getElementById(id),
        hid = (id,html) => eid(id).innerHTML=html,
        storage = localStorage,
        { log } = console,
        test = w.test_addStorage = () => {
          let
            x = Math.random().toString(36),
            k = x.substring(2,7),
            v = x.substring(2,10);
          localStorage.setItem(k,v);
        },
        updateLog = w.updateLog = () => {
          hid('localStorage', [
            '',
            `theme: ${storage['theme']}\n`,
            `storage[${storage.length}]: `+JSON.stringify(storage, null, 2)
          ].join('\n'));
        };
      w.addEventListener("local-storage-change", (event) => {
        updateLog();
      });
      d.addEventListener('DOMContentLoaded', () => {
        updateLog();
      });
    })();
  //- script.