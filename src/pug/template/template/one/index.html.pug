extends ../../../_basic/_html

block append vars
  -
    pageid      = 'template/one'
    pageUrl     = siteUrl + '/template/one/index.html'
    title       = `Template One`
    description = 'Template One Preview'
    author      = 'Techie Joe'

mixin ba(href='#',_onclick)
  a(href=href onclick=onclick(_onclick))&attributes(attributes): block

mixin liba(href='#',_onclick)
  li: a(href=href onclick=onclick(_onclick))&attributes(attributes): block

mixin block_1(title)
  div&attributes(attributes)._text_justify
    h3._inline._h7 !{title}
    p._inline: block

mixin block_2(title)
  div&attributes(attributes)
    h3._h6 !{title}
    p._text_justify: block

mixin block_3(title)
  div&attributes(attributes)
    h3._h6 !{title}
    p._text_justify: block

mixin block_4(title)
  div&attributes(attributes)._color_2._radius_5._pa
    h3._h6 !{title}
    p._text_justify: block

mixin page_a11(links)
  each v in links
    - classes = ['_a11'];
    - if(pageid === v[0]) classes.push('_active')
    if typeof v === 'string'
      span._inblock._mh_25|!{v}
    else
      a(href=homeUri+v[1] onclick=onclick() class=classes.join(' ') title=v[3]) !{v[2]}
      //- a(href=homeUri+v[1] class=classes.join(' ') title=v[3]) !{v[2]}

block header
  header#_header
    ._color_1._pad: ._960._pa_5
      a(href='./')#logo._no_select: +_logo
      span#maindesc!=description
    nav#_main_nav._color_2: ._flex._960
      ._fit: +backlink._a11|#[+isvg(svgi.angle,'_cicon')._rotate_180]
      ._f
        +a('./')._a11|Home
        +page_a11([
          ['about','about','About'],
          ['template/one','products','Products'],
          ['services','services','Services'],
          ['gallery','gallery','Gallery'],
          ['blog','blog','Blog'],
          ['contact','contact','Contact'],
        ])
      ._fit: +changeThemeLink._a11: +itext('_cicon')|â˜€

block article

  article._article._ma: ._960(style="margin:3rem auto")

    section(style="margin-top:-3rem"): +basic_helloWorld
    hr

    section._p1

      h2._h1 How to Build an Effective Theme

      style.
        #i00 > .f { min-width: 240px; max-width: 470px; }
      #i00._flex._gap2(style="margin:2rem auto")

        .f._f2: +block_1('Building a Good Theme for a Website')| : Creating a cohesive and visually appealing theme for your website is crucial for attracting and retaining visitors. A well-designed theme enhances user experience, reflects your brand's identity, and helps convey your message effectively. Here is a comprehensive guide on how to build a good theme for your website.

        .f._f2: +block_1('Define Your Purpose and Audience')| : Before diving into design, clarify the purpose of your website. Is it a blog, an e-commerce site, a portfolio, or a corporate page? Understanding your target audience's preferences and needs will guide your design choices and help you create a theme that resonates with them.
      
      style.
        #i01 > .f { min-width: 240px; max-width: 470px; }
      #i01._flex._gap2(style="margin:2rem auto")

        .f._f4._flex_column._gap2

          +block_2('Choose the Right Color Palette')| Colors evoke emotions and set the tone for your website. Select a color palette that aligns with your brand's identity and appeals to your audience. Use tools like Adobe Color or Coolors to experiment with different color schemes. Ensure your chosen colors provide enough contrast for readability and accessibility.
          
          +block_3('Typography Matters')| Fonts play a significant role in your website's readability and aesthetic appeal. Choose fonts that complement your brand's personality and maintain consistency throughout the site. Use a combination of a primary font for headings and a secondary font for body text. Tools like Google Fonts offer a wide range of web-safe fonts to choose from.

        .f._f4._flex_column._gap2
          
          +block_2('Create a Layout Grid')| A layout grid helps organize your content and ensures a balanced and structured design. It provides a framework for placing elements like text, images, and buttons in a visually appealing way. Tools like Sketch or Figma can help you create and implement a layout grid.

          +block_3('Focus on Navigation')| User-friendly navigation is essential for a positive user experience. Design a clear and intuitive navigation menu that allows visitors to find information easily. Use descriptive labels and consider implementing a sticky menu that remains visible as users scroll down the page.

        .f._f4._flex_column._gap2

          +block_4('Optimize for Responsiveness')| Your website should look and function well on all devices, including desktops, tablets, and smartphones. Use responsive design techniques to ensure your theme adapts seamlessly to different screen sizes. Test your design on multiple devices to identify and fix any issues.

          +block_4('Use High-Quality Images and Graphics')| Visual elements like images, icons, and graphics add depth and interest to your theme. Invest in high-quality visuals that align with your brand's style. Use tools like Unsplash or Pexels for free stock photos, and tools like Canva for creating custom graphics.
      
      style.
        #i02 > .f { max-width:470px }
      #i02._flex._gap2(style="margin:2rem auto")

        .f._f2

          +block_1('Consistent Branding')| : Maintain consistency in your branding elements, such as logos, colors, fonts, and styles. Consistent branding helps build brand recognition and trust. Create a style guide that outlines your brand's visual identity and design principles.

        .f._f2
  
          +block_1('Ensure Fast Loading Times')| : A slow website can frustrate visitors and lead to high bounce rates. Optimize your theme for speed by minimizing the use of large images, leveraging browser caching, and using a content delivery network (CDN). Tools like GTmetrix or Google PageSpeed Insights can help you identify and fix performance issues.

        .f._f2

          +block_1('Incorporate Interactive Elements')| : Interactive elements like animations, hover effects, and micro-interactions enhance user engagement. Use them sparingly to draw attention to important elements and improve the overall user experience. Ensure that these interactions are smooth and don't hinder usability.

        .f._f2

          +block_1('Test and Iterate')| : Once your theme is designed, test it thoroughly to identify any issues or areas for improvement. Gather feedback from users and make necessary adjustments. Regularly update your theme to keep it fresh and aligned with current design trends.

    ._p(style="margin:2rem auto")

      +block_1('Conclusion')| : Building a good theme for your website involves a blend of creativity, strategic planning, and technical know-how. By focusing on elements like color, typography, layout, navigation, and responsiveness, you can create a theme that not only looks great but also provides an exceptional user experience. Remember to stay consistent with your branding, optimize for performance, and continuously test and improve your design. With these steps, you'll be well on your way to creating a visually appealing and highly functional website theme. Happy designing!

    hr

    section._flex._gap2(style="margin:2rem auto")
      ._fit(style="flex-basis:300px;")
        h3._h6 Buttons
        .buttons._p
          +a(onclick=onclick())._a31.__primary Primary
          +a(onclick=onclick())._a31.__secondary Secondary
          +a(onclick=onclick())._a31 Ordinary

      ._f(style="flex-basis:230px;")
        h3._h6 Intuitive Hyperlinks
        .links: p._text_justify
          | Use standard color for hyperlinks.
          | These standards are well known to most users.
          | Peoples are used to hyperlinks that look #[+ba#normalink._stay_fresh._no_wrap like this],
          | and visited links #[+ba('')._no_wrap like this].
          | However, you may also blend some links using #[+ba('')._no_wrap._hover_link hover link] or completely remove color using the #[+ba._no_color._no_wrap colorless link].
    script.
      document.getElementById('normalink').href+='?t='+(new Date().getTime());

block append article

  style.
    #article_footer { padding:1rem 1px 3rem }
  footer#article_footer._color_1: ._ma: ._960._flex._gap2
    ._f(style="flex-basis:200px;")
      h6._h7._no_margin Official Address
      //- |#[b Company Name]#[br]
      div._mv._small
        .
          #[b Company Name],#[br]
          101 Suite, ABC Street,#[br]
          ZIP County, State,#[br]
          Country, CC#[br]
      div._tc_contra._no_wrap #[b._b + 012 345 6789]
      div._small._no_wrap #[span your-email@your-domain.com]

    ._f(style="flex-basis:150px;")
      h6._h7._no_margin Primary Segment
      ul._plain
        +liba._hover_link._hover_u This segment
        +liba._hover_link._hover_u Will have links
        +liba._hover_link._hover_u To some pages

    ._f(style="flex-basis:150px;")
      h6._h7._no_margin Secondary Segment
      ul._plain
        +liba._hover_link._hover_u Put some links
        +liba._hover_link._hover_u To your posts
        +liba._hover_link._hover_u And pages

  //- flex
